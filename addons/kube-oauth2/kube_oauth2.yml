apiVersion: v1
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app: kube-oauth2
  name: kube-oauth2
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kube-oauth2
  template:
    metadata:
      labels:
        app: kube-oauth2
    spec:
      containers:
      - name: kube-oauth2
        image: docker.io/coldog/kube-oauth2:0.0.2
        ports:
        - containerPort: 80
          protocol: TCP
        args:
        - kube-oauth2server
        - -advertise=oauth.default.coldog.xyz
        - -listen=0.0.0.0:80
        - -ca-uri=https://s3-us-west-2.amazonaws.com/coldog-k8s-cluster/default/secrets/ca.pem
        - -key-uri=https://s3-us-west-2.amazonaws.com/coldog-k8s-cluster/default/secrets/ca-key.pem
        - -api=k8s.default.coldog.xyz
        - -github
        env:
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: github-oauth2-credentials
              key: id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: github-oauth2-credentials
              key: secret
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 30
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: kube-oauth2
  name: kube-oauth2
  namespace: kube-system
spec:
  ports:
  - name: main
    port: 80
  selector:
    app: kube-oauth2
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube-oauth2
  namespace: kube-system
spec:
  rules:
    - host: auth.default.coldog.xyz
      http:
        paths:
        - path: '/'
          backend:
            serviceName: kube-oauth2
            servicePort: 80
